# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2023.HF4 replay file
# Internal Version: 2023_07_21-20.45.57 RELr425 183702
# Run by nguyenb5 on Wed Apr  2 17:42:11 2025
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=192.38020324707, 
    height=142.73957824707)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('cube_test.cae')
#: The model database "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-Multiphysics\cube_test.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['UMAT_UMATHT_cube_C3D8T_transient_nlgeom_on_4NP'].parts['cube']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
#--- Recover file: 'cube_test.rec' ---
# -*- coding: mbcs -*- 
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(name='suborutine_multiphysics', 
    objectToCopy=mdb.models['subroutine_cube_C3D8T_transient_nlgeom_on_4NP'])
#: The model "suborutine_multiphysics" has been created.
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='suborutine_multiphysics', 
    modelPrint=OFF, multiprocessingMode=DEFAULT, 
    name='subroutine_multiphysics', nodalOutputPrecision=SINGLE, numCpus=1, 
    numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=ODB, 
    scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.models['suborutine_multiphysics'].predefinedFields['heat_top_side'].setValues(
    region=mdb.models['suborutine_multiphysics'].rootAssembly.sets['top_side'])
mdb.models['suborutine_multiphysics'].predefinedFields['heat_bottom_side'].setValues(
    region=mdb.models['suborutine_multiphysics'].rootAssembly.sets['bottom_side'])
#--- End of Recover file ------
a = mdb.models['UMAT_UMATHT_cube_C3D8T_transient_nlgeom_on_4NP'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
mdb.jobs['subroutine_multiphysics'].writeInput(consistencyChecking=OFF)
#: The job input file has been written to "subroutine_multiphysics.inp".
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p1 = mdb.models['suborutine_multiphysics'].parts['cube']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
mdb.models['suborutine_multiphysics'].sections['Section-1'].setValues(
    material='multiphysics', thickness=None)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-Multiphysics\cube_test.cae".
del mdb.models['suborutine_multiphysics'].materials['multiphysics'].density
del mdb.models['suborutine_multiphysics'].materials['multiphysics'].userOutputVariables
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-Multiphysics\cube_test.cae".
a = mdb.models['suborutine_multiphysics'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
mdb.jobs['subroutine_multiphysics'].writeInput(consistencyChecking=OFF)
#: The job input file has been written to "subroutine_multiphysics.inp".
a = mdb.models['subroutine_cube_multiphysics'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
del mdb.models['subroutine_cube_multiphysics']
a = mdb.models['UMAT_UMATHT_cube_C3D8T_transient_nlgeom_on_4NP'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['suborutine_multiphysics'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    step='step1_multiphysics')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['suborutine_multiphysics'].fieldOutputRequests['F-Output-1'].setValues(
    variables=('HFL', 'LE', 'NT', 'RF', 'RFL', 'S', 'SDV', 'TEMP', 'U'))
p1 = mdb.models['suborutine_multiphysics'].parts['cube']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-Multiphysics\cube_test.cae".
a = mdb.models['suborutine_multiphysics'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['subroutine_multiphysics'].writeInput(consistencyChecking=OFF)
#: The job input file has been written to "subroutine_multiphysics.inp".
p1 = mdb.models['suborutine_multiphysics'].parts['cube']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
del mdb.models['suborutine_multiphysics'].materials['multiphysics'].userDefinedField
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-Multiphysics\cube_test.cae".
a = mdb.models['suborutine_multiphysics'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    step='step1_multiphysics')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
