# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2023.HF4 replay file
# Internal Version: 2023_07_21-20.45.57 RELr425 183702
# Run by nguyenb5 on Tue Mar 25 11:02:47 2025
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=243.21875, 
    height=185.628463745117)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('cube_test.cae')
#: The model database "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-deformation-diffusion\cube_test.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['solver_cube_C3D8T_transient_nlgeom_off_1NP'].parts['cube']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['solver_cube_C3D8T_transient_nlgeom_off_1NP'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
mdb.Job(name='subroutine_cube_C3D8_elastic_nlgeom_off_nosymm', 
    model='subroutine_cube_C3D8_elastic_nlgeom_off_nosymm', description='', 
    type=ANALYSIS, atTime=None, waitMinutes=0, waitHours=0, queue=None, 
    memory=90, memoryUnits=PERCENTAGE, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, numThreadsPerMpiProcess=1, 
    multiprocessingMode=DEFAULT, numCpus=1, numGPUs=0)
mdb.Job(name='subroutine_cube_C3D8_elastic_nlgeom_off_symm', 
    model='subroutine_cube_C3D8_elastic_nlgeom_off_symm', description='', 
    type=ANALYSIS, atTime=None, waitMinutes=0, waitHours=0, queue=None, 
    memory=90, memoryUnits=PERCENTAGE, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, numThreadsPerMpiProcess=1, 
    multiprocessingMode=DEFAULT, numCpus=1, numGPUs=0)
mdb.Job(name='subroutine_cube_C3D8_elastic_nlgeom_on_nosymm', 
    model='subroutine_cube_C3D8_elastic_nlgeom_on_nosymm', description='', 
    type=ANALYSIS, atTime=None, waitMinutes=0, waitHours=0, queue=None, 
    memory=90, memoryUnits=PERCENTAGE, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, numThreadsPerMpiProcess=1, 
    multiprocessingMode=DEFAULT, numCpus=1, numGPUs=0)
mdb.Job(name='subroutine_cube_C3D8_elastic_nlgeom_on_symm', 
    model='subroutine_cube_C3D8_elastic_nlgeom_on_symm', description='', 
    type=ANALYSIS, atTime=None, waitMinutes=0, waitHours=0, queue=None, 
    memory=90, memoryUnits=PERCENTAGE, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, numThreadsPerMpiProcess=1, 
    multiprocessingMode=DEFAULT, numCpus=1, numGPUs=0)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-deformation-diffusion\cube_test.cae".
mdb.jobs['subroutine_cube_C3D8_elastic_nlgeom_on_symm'].writeInput(
    consistencyChecking=OFF)
#: The job input file has been written to "subroutine_cube_C3D8_elastic_nlgeom_on_symm.inp".
a = mdb.models['subroutine_cube_C3D8_elastic_nlgeom_off_symm'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['subroutine_cube_C3D8_elastic_nlgeom_on_symm'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    step='step1_tensile')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].setValues(displayedObject=None)
a = mdb.models['subroutine_cube_C3D8_elastic_nlgeom_on_symm'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    step='step1_tensile')
a = mdb.models['subroutine_cube_C3D8_elastic_nlgeom_on_nosymm'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
mdb.Model(name='subroutine_cube_C3D8_elastic_nlgeom_on_nosymm_many', 
    objectToCopy=mdb.models['subroutine_cube_C3D8_elastic_nlgeom_on_nosymm'])
#: The model "subroutine_cube_C3D8_elastic_nlgeom_on_nosymm_many" has been created.
a = mdb.models['subroutine_cube_C3D8_elastic_nlgeom_on_nosymm_many'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
mdb.models.changeKey(
    fromName='subroutine_cube_C3D8_elastic_nlgeom_on_nosymm_many', 
    toName='subroutine_test')
a = mdb.models['subroutine_test'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
a = mdb.models['solver_cube_Q3D8'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-1')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['solver_cube_Q3D8'].fieldOutputRequests['F-Output-1'].setValues(
    variables=('RF', 'U', 'SDV'))
mdb.Model(name='subroutine_cube_Q3D8', 
    objectToCopy=mdb.models['solver_cube_Q3D8'])
#: The model "subroutine_cube_Q3D8" has been created.
a = mdb.models['subroutine_cube_Q3D8'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p1 = mdb.models['subroutine_cube_Q3D8'].parts['cube']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
del mdb.models['subroutine_cube_Q3D8'].materials['thermo_electro_mechanical'].conductivity
del mdb.models['subroutine_cube_Q3D8'].materials['thermo_electro_mechanical'].elastic
del mdb.models['subroutine_cube_Q3D8'].materials['thermo_electro_mechanical'].electricalConductivity
del mdb.models['subroutine_cube_Q3D8'].materials['thermo_electro_mechanical'].plastic
del mdb.models['subroutine_cube_Q3D8'].materials['thermo_electro_mechanical'].specificHeat
mdb.models['subroutine_cube_Q3D8'].materials['thermo_electro_mechanical'].Depvar(
    )
mdb.models['subroutine_cube_Q3D8'].materials.changeKey(
    fromName='thermo_electro_mechanical', toName='multiphysics')
mdb.models.changeKey(fromName='subroutine_cube_Q3D8', 
    toName='subroutine_cube_multiphysics')
p = mdb.models['subroutine_cube_multiphysics'].parts['cube']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
mdb.models['subroutine_cube_multiphysics'].sections['Section-1'].setValues(
    material='multiphysics', thickness=None)
a = mdb.models['subroutine_cube_multiphysics'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, adaptiveMeshConstraints=OFF)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.00238206, 
    farPlane=0.00493502, width=0.00205362, height=0.00126506, 
    viewOffsetX=0.000197709, viewOffsetY=7.89487e-05)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.00230471, 
    farPlane=0.00501237, width=0.00270735, height=0.00166778, 
    viewOffsetX=0.000429419, viewOffsetY=-1.2082e-05)
a = mdb.models['subroutine_test'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
del mdb.models['subroutine_test']
a = mdb.models['solver_cube_C3D8T_transient_nlgeom_off_1NP'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['solver_cube_C3D8T_transient_nlgeom_on_4NP'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['subroutine_cube_C3D8T_transient_nlgeom_off_4NP'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    step='step1_thermomechanical')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
a = mdb.models['subroutine_cube_C3D8T_transient_nlgeom_on_4NP'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
p1 = mdb.models['subroutine_cube_C3D8T_transient_nlgeom_on_4NP'].parts['cube']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
del mdb.models['subroutine_cube_C3D8T_transient_nlgeom_on_4NP'].materials['thermomechanical'].userMaterial
a = mdb.models['subroutine_cube_C3D8T_transient_nlgeom_on_4NP'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
mdb.models['subroutine_cube_C3D8T_transient_nlgeom_on_4NP'].fieldOutputRequests['F-Output-1'].setValues(
    variables=('RF', 'U', 'SDV'))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, adaptiveMeshConstraints=OFF)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-deformation-diffusion\cube_test.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['subroutine_cube_C3D8T_transient_nlgeom_on_4NP'].writeInput(
    consistencyChecking=OFF)
#: The job input file has been written to "subroutine_cube_C3D8T_transient_nlgeom_on_4NP.inp".
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\Abaqus-UEL-deformation-diffusion\cube_test.cae".
